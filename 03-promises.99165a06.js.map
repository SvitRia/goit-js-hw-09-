{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAIC,iBACJ,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBI,MAAOC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,OAErB,GAAGH,EAAMI,MAAQ,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,MAAQ,EAEvD,OAF4DC,EAAAf,GAASgB,OAAOC,QAAQ,uCACpFZ,EAAIG,cAAcU,QAEf,IAAIC,EAAI,GACT,SAASC,IACPD,GAAK,EACN,IAiBkBE,EAAUV,EAjBtBW,EAASC,SAASb,EAAMI,OAASS,SAASX,EAAKE,QAAUK,EAAI,IAiBjDE,EAfJF,EAecR,EAfZW,EAgBZ,IAAIE,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEnCC,YAAW,WACNH,EACDF,EAAQ,CAAEJ,WAAUV,UAEpBe,EAAO,CAAEL,WAAUV,S,GAEnBA,E,KAxBHoB,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUV,EAAKqB,EAALrB,MAClBI,EAAAf,GAASgB,OAAOiB,QAAS,uBAAwCC,OAAfb,EAAS,QAAYa,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAH,G,IAAGX,EAAQW,EAARX,SAAUV,EAAKqB,EAALrB,MACnBI,EAAAf,GAASgB,OAAOoB,QAAU,sBAAqCF,OAAfb,EAAS,QAAYa,OAANvB,EAAM,M,IAElEQ,EAAII,SAASV,EAAOC,QACvBgB,WAAWV,IAAqBE,E,CAIpCF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener(\"submit\", onListPromise)\n\nfunction onListPromise(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  if(delay.value < 0 || step.value < 0 || amount.value < 0) { Notiflix.Notify.warning('Please enter a positive number');\n  evt.currentTarget.reset()\n  return} \n     let i = 0;\n    function createNextPromise() { \n      i += 1;\n     const delays = parseInt(delay.value) + parseInt(step.value) * (i - 1);\n    \n     createPromise(i,delays)\n     .then(({ position, delay }) => {\n      Notiflix.Notify.success( `✅ Fulfilled promise ${position} in ${delay}ms`)\n     })\n     .catch(({ position, delay }) => {\n      Notiflix.Notify.failure ( `❌ Rejected promise ${position} in ${delay}ms`)\n     })\n     if (i < parseInt(amount.value)) {\n      setTimeout(createNextPromise(), delays); \n    }\n   \n  }\n  createNextPromise();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n \n     setTimeout(()=>{\n      if (shouldResolve) {\n         resolve({ position, delay })\n         } else {\n         reject({ position, delay })\n         }\n      }, delay)\n})\n}\n\n\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","value","$parcel$interopDefault","Notify","warning","reset","i","createNextPromise","position","delays","parseInt","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.99165a06.js.map"}