{"mappings":"AAAaA,SAASC,cAAc,SAApC,MACMC,EAAmBF,SAASC,cAAc,UAChDC,EAAiBC,iBAAiB,UAClC,SAAsBC,GACpBA,EAAIC,iBACJ,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAIM,cAAcC,SACpD,GAAGJ,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EAAIV,EAAiBW,aAAa,YAAY,GAAOC,MAAM,sCAAwC,CACxJZ,EAAiBa,gBAAgB,YACjCC,QAAQC,IAAIR,GACZ,EAAG,CACHS,GAAK,EACL,IAAIC,EAASZ,EAAQC,GAAQU,EAAE,IACjBA,EAAEC,EAaT,IAAIC,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCT,QAAQC,IAAIM,EACK,KAfhBG,MAAK,EAACC,SAAEA,EAAQrB,MAAEA,MACjBQ,MAAO,uBAAqBa,QAAiBrB,MAAU,IAExDsB,OAAM,EAACD,SAAEA,EAAQrB,MAAEA,MAClBQ,MAAQ,sBAAoBa,QAAerB,MAAU,G,OAGhDY,EAAIT,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst btnCreatePromise = document.querySelector('button')\nbtnCreatePromise.addEventListener(\"submit\", onListPromis)\nfunction onListPromis(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\nif(delay.value < 0 || step.value < 0 || amount.value < 0) {btnCreatePromise.setAttribute('disabled', true); alert(' Please enter a positive numbe')} else { \n  btnCreatePromise.removeAttribute('disabled',)\n  console.log(amount);\n  do {  \n  i += 1;\n  let delays = delay + step * (i-1);\n  createPromise(i,delays)\n  .then(({ position, delay }) => {\n    alert( `✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n    alert ( `❌ Rejected promise ${position} in ${delay}ms`)\n  });\n  }\n  while( i < amount)\n}\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(shouldResolve);\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n})\n}\n\n"],"names":["document","querySelector","$47d4ff9957288465$var$btnCreatePromise","addEventListener","evt","preventDefault","delay","delay1","step","amount","currentTarget","elements","value","setAttribute","alert","removeAttribute","console","log","i","delays","Promise","resolve","reject","shouldResolve","Math","random","then","position","catch"],"version":3,"file":"03-promises.bc6d8059.js.map"}