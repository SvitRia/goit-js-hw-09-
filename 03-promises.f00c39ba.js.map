{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAIC,iBACJ,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAIM,cAAcC,SAElD,GAAGJ,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EAEvD,OAF4DC,EAAAd,GAASe,OAAOC,QAAQ,uCACpFX,EAAIM,cAAcM,QAEf,IAAIC,EAAI,GACT,SAASC,IACPD,GAAK,EACN,MAAME,EAASC,SAASb,EAAMK,OAASQ,SAASZ,EAAKI,QAAUK,EAAI,GAiBxE,IAAuBI,EAAUf,GAAVe,EAfJJ,EAecX,EAfZa,EAgBZ,IAAIG,SAAQ,CAACC,EAASC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GAEnCC,YAAW,KACNH,EACDF,EAAQ,C,SAAEF,E,MAAUf,IAEpBkB,EAAO,C,SAAEH,E,MAAUf,GAAQ,GAE3BA,EAAM,KAxBTuB,MAAK,EAACR,SAAEA,EAAQf,MAAEA,MAClBO,EAAAd,GAASe,OAAOgB,QAAS,uBAAqBT,QAAiBf,MAAU,IAEzEyB,OAAM,EAACV,SAAEA,EAAQf,MAAEA,MACnBO,EAAAd,GAASe,OAAOkB,QAAU,sBAAoBX,QAAef,MAAU,IAEpEW,EAAIG,SAASX,EAAOG,QACvBgB,WAAWV,IAAqBC,E,CAIpCD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener(\"submit\", onListPromise)\n\nfunction onListPromise(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  if(delay.value < 0 || step.value < 0 || amount.value < 0) { Notiflix.Notify.warning('Please enter a positive number');\n  evt.currentTarget.reset()\n  return} \n     let i = 0;\n    function createNextPromise() { \n      i += 1;\n     const delays = parseInt(delay.value) + parseInt(step.value) * (i - 1);\n    \n     createPromise(i,delays)\n     .then(({ position, delay }) => {\n      Notiflix.Notify.success( `✅ Fulfilled promise ${position} in ${delay}ms`)\n     })\n     .catch(({ position, delay }) => {\n      Notiflix.Notify.failure ( `❌ Rejected promise ${position} in ${delay}ms`)\n     })\n     if (i < parseInt(amount.value)) {\n      setTimeout(createNextPromise(), delays); \n    }\n   \n  }\n  createNextPromise();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n \n     setTimeout(()=>{\n      if (shouldResolve) {\n         resolve({ position, delay })\n         } else {\n         reject({ position, delay })\n         }\n      }, delay)\n})\n}\n\n\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delay","delay1","step","amount","currentTarget","elements","value","$parcel$interopDefault","Notify","warning","reset","i","createNextPromise","delays","parseInt","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","success","catch","failure"],"version":3,"file":"03-promises.f00c39ba.js.map"}